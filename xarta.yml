captainVersion: 4

services:

  $$cap_appname:
    image: ghcr.io/voltdatalab/xarta-entrypoint
    environment:
      PROJECT_NAME: srv-captain--$$cap_appname
    volumes:
      # Do not use underscore
      - $$cap_appname-entrypoint-caddy-data:/data
      - $$cap_appname-entrypoint-caddy-config:/config

  $$cap_appname-next:
    image: ghcr.io/voltdatalab/xarta
    environment:
      # Required for get-settings
      INTERNAL_GHOST_URL: http://srv-captain--$$cap_appname
      # TODO: Set automatically via setup-helper
      # For now, these will have to be manually set by the user
      # GHOST_ADMIN_API_KEY: ${GHOST_ADMIN_API_KEY}
      # GHOST_CONTENT_API_KEY: ${GHOST_CONTENT_API_KEY}
      # Required for set language
      NEXT_INTERNAL_ROOT_URL: http://srv-captain--$$cap_appname
      # Used to connect to Xarta Postgres DB
      # Required for the database scripts
      XARTA_DB_HOST: srv-captain--$$cap_appname-xarta-db
      XARTA_DB_USER: $$cap_xarta_db_user
      XARTA_DB_PASSWORD: $$cap_xarta_db_password
      # Variables for Next.js public and server
      PUBLIC_ROOT_URL: $$cap_appname.$$cap_root_domain

  $$cap_appname-ghost:
    image: ghost:5.118.0
    environment:
        - url=$$cap_appname.$$cap_root_domain
        - NODE_ENV=production
        # Disable 2FA so that staff logins don't depend on emails
        # TODO: Consider reenabling
        - security__staffDeviceVerification=false
        - database__client=mysql
        - database__connection__host=srv-captain--$$cap_appname-ghost-db
        # TODO: Add custom user option?
        - database__connection__user=root
        - database__connection__password=$$cap_ghost_db_password
        - database__connection__database=ghost
    volumes:
      - $$cap_appname-xarta-ghost-data:/var/lib/ghost/content
    # Fixes errors when ghost cannot connect to mysql database on init 
    restart: unless-stopped
    depends_on:
      $$cap_appname-ghost-db:
        condition: service_healthy    

  $$cap_appname-ghost-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: $$cap_ghost_db_password
    volumes:
      - $$cap_appname-xarta-ghost-db-data:/var/lib/mysql
    # Required, otherwise ghost will fail during startup
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 10

  $$cap_appname-xarta-db:
    image: postgres:17
    environment:
      POSTGRES_USER: $$cap_xarta_db_user
      POSTGRES_PASSWORD: $$cap_xarta_db_password
      POSTGRES_DB: "xarta"
    volumes:
      - $$cap_appname-xarta-db-data:/var/lib/postgresql/data

  $$cap_appname-setup-helper:
    image: ghcr.io/voltdatalab/xarta-setup
    environment:
      CADDY_CONTAINER_NAME: "srv-captain--$$cap_appname"
      PROJECT_NAME: srv-captain--$$cap_appname
      GHOST_DB_PASSWORD: $$cap_ghost_db_password
      PUBLIC_URL: $$cap_appname.$$cap_root_domain
    profiles: [setup]
    # Force caprover behavior on setup helper
    command: --caprover
    # Keeps the container running as an interactive terminal
    # tty: true
    # Used to allow providing input to attach
    # stdin_open: true
    depends_on:
      $$cap_appname-ghost:
        condition: service_started
        restart: false

caproverOneClickApp:
  variables:
      
    - id: '$$cap_ghost_db_password'
      label: Ghost Database Password
      description: Password for the Ghost MySQL database.
      defaultValue: $$cap_gen_random_hex(16)
      validRegex: '/.{8,}/'
      
    - id: '$$cap_xarta_db_user'
      label: Xarta Database User
      description: Username for the Xarta PostgreSQL database.
      defaultValue: 'xarta-db-user'
      validRegex: '/^[a-zA-Z0-9_\-]+$/'
      
    - id: '$$cap_xarta_db_password'
      label: Xarta Database Password
      description: Password for the Xarta PostgreSQL database.
      defaultValue: $$cap_gen_random_hex(16)
      validRegex: '/.{8,}/'
      
  instructions:
    start: |-
      Xarta is a card creation and publishing platform built on top of Ghost CMS.
      
      This one-click app will install:
      - Xarta Next.js frontend
      - Ghost CMS backend
      - MySQL database for Ghost
      - PostgreSQL database for Xarta
      - Caddy reverse proxy
      - Setup helper container
      
      After installation, you'll need to complete the Xarta setup process by accessing the setup-helper container 
      and following its instructions.
      
      The setup helper will automatically configure the necessary API keys.
    end: |-
      Xarta has been successfully pre-deployed!

      The setup helper will automatically configure the necessary API keys.

      Please check its logs and update the remaining env variables accordingly
      
      Access your Xarta instance at:
      https://$$cap_appname.$$cap_root_domain/xarta
      
      Access the Ghost admin panel at:
      https://$$cap_appname.$$cap_root_domain/ghost
      
      
  displayName: Xarta
  isOfficial: false
  description: Xarta is a card creation and publishing platform built on top of Ghost CMS.
  documentation: This configuration is based on the official Xarta docker-compose setup from https://github.com/voltdatalab/xarta
