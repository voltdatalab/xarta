FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app
# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then npm i -g pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi


# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
ARG NEXT_PUBLIC_ROOT_URL
ARG NEXT_PUBLIC_DEMO_USERNAME
ARG NEXT_PUBLIC_DEMO_PASSWORD
COPY --from=deps /app/node_modules ./node_modules
COPY . .
# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
# ENV NEXT_TELEMETRY_DISABLED 1
RUN mkdir -p /app/public
# If using npm comment out above and use below instead
# Using echo below to improve debugging during build
RUN echo "NEXT_PUBLIC_ROOT_URL: $NEXT_PUBLIC_ROOT_URL, INTERNAL_GHOST_URL: $INTERNAL_GHOST_URL" && \
    npm run build
# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app
ENV NODE_ENV production
# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED 1
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
# Required for postgres migrations
# bash is required for migration scripts
# TODO: Consider removing bash from scripts
# Install inotify-tools for file watching
RUN apk add postgresql-client bash inotify-tools
COPY --from=builder /app/public ./public
# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next
# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
# Required for running migrations
COPY ./tools/database ./tools/database
COPY ./tools/scripts ./tools/scripts
RUN chmod +x ./tools/database/wait-for-postgres.sh ./tools/database/migrate.sh
# Create an empty .env file so that inotifywait does not throw missing file errors.
# TODO: Explore alternatives
RUN mkdir -p /.setup-manager/ && touch /.setup-manager/.env
RUN touch /app/.env && \
    chown root:nextjs /app/.env && \
    chmod 664 /app/.env
USER nextjs
EXPOSE 3000
ENV PORT 3000
# set hostname to localhost
ENV HOSTNAME "0.0.0.0"
# Run scripts then start the server with inotify watching .env file
# server.js is created by next build from the standalone output
# https://nextjs.org/docs/pages/api-reference/next-config-js/output
# TODO: Abstract port config for Next.js
CMD ["bash", "-c", "\
  ./tools/database/wait-for-postgres.sh && \
  ./tools/database/migrate.sh && \
  echo $(pwd) && \
  cat /.setup-manager/.env > /app/.env && \
  node server.js & \
  NODE_PID=$! && \
  while inotifywait -e modify,create,delete,move /.setup-manager/.env; do \
    echo 'Detected change in /.setup-manager/.env file. Restarting server...' && \
    kill -TERM $NODE_PID && \
    cat /.setup-manager/.env > /app/.env && \
    while lsof -i :3000 >/dev/null 2>&1; do sleep 0.2; done && \
    node server.js & \
    NODE_PID=$!; \
  done"]